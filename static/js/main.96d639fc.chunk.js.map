{"version":3,"sources":["provider/web3/web3_provider.tsx","net/api.ts","utils/api_servers.ts","view/signature/sign.tsx","utils/sign.tsx","view/signature/hook/product.tsx","App.tsx","index.tsx"],"names":["Web3Provider","ev","useState","web3","Web3","setWeb3","useWallet","account","ethereum","faceBack","useCallback","bb","useEffect","Web3Conten","Provider","value","children","createContext","baseURL","axios","this","create","timeout","headers","transformRequest","data","JSON","stringify","transformResponse","parse","interceptors","request","use","config","Promise","resolve","error","reject","response","status","code","result","url","params","get","post","put","patch","delete","ApiServers","msgParams","NetAxios","address","Sign","sign","useContext","callBack","from","currentProvider","sendAsync","method","err","console","log","dir","alert","message","SignFn","undefined","setResult","list","ac","product","setProduct","getProduct","a","Product","StyleButton","className","length","map","product_id","onClick","domain","chainId","name","verifyingContract","version","contents","primaryType","types","EIP712Domain","type","Mail","msg","quantity","style","vote","styled","div","css","App","connectors","walletconnect","rpcUrl","connect","StyleBox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96d639fc.chunk.js","sourcesContent":["import React, {createContext, useCallback, useEffect, useMemo, useState} from \"react\";\nimport {useWallet} from \"use-wallet\";\nimport Web3 from \"web3\";\nexport const Web3Provider: React.FC = (ev) => {\n    const [web3, setWeb3] = useState<Web3interface>({\n        web3: new Web3()\n    });\n    const {account,ethereum} = useWallet<any>();\n    const faceBack = useCallback(()=>{\n         const bb:Web3 = new Web3(ethereum);\n\n        setWeb3({web3:bb});\n    },[ethereum,setWeb3,web3]);\n    useEffect(() => {\n       if(account && ethereum){\n           faceBack()\n       }\n    }, [\n        account,ethereum\n    ]);\n    return (<Web3Conten.Provider value={web3}>{ev.children}</Web3Conten.Provider>);\n};\n\n\nexport const Web3Conten = createContext<Web3interface>({web3:new Web3()});\n\n\n\ninterface Web3interface {\n    web3: Web3,\n}\n","\n\nimport axios, {AxiosInstance} from 'axios';\n\nclass NetAxios {\n    private axios:AxiosInstance;\n    private baseURL:string;\n\n    constructor(baseURL:string){\n        this.baseURL = baseURL;\n        this.axios = axios.create({\n            timeout: 30000,\n            headers: {\n                 'Content-Type': 'application/json;charset=utf-8'\n            },\n            transformRequest: [\n                (data) => {\n                    return JSON.stringify(data);\n                }\n            ],\n            transformResponse: [\n                (data) => {\n                    return JSON.parse(data);\n                }\n            ]\n        });\n        this.interceptors();\n    }\n\n    /**\n     * 默认拦截器\n     */\n    interceptors() {\n        // 请求拦截器\n        this.axios.interceptors.request.use(\n            (config) => {\n                // if (localStorage.getItem('token')) {\n                //     config.headers.common['token'] = localStorage.getItem('token');\n                // }\n                return Promise.resolve(config);\n            },\n            (error) => {\n                return Promise.reject(error);\n            }\n        );\n\n        // 响应拦截器\n        this.axios.interceptors.response.use(\n            (response) => {\n                const { status, data } = response;\n                const { code, result } = data;\n                if (status === 200 && code === 0) {\n                    return Promise.resolve(result);\n                }\n                return Promise.reject(data);\n            },\n            (error) => {\n                return Promise.reject(error);\n            }\n        );\n    }\n\n    get(url, params) {\n        return this.axios.get(`${this.baseURL}${url}`, { params: { ...params } })\n    }\n\n    post(url, data) {\n        return this.axios.post(`${this.baseURL}${url}`, data)\n    }\n\n    put(url, data) {\n        return this.axios.put(url, data)\n    }\n\n    patch(url, data) {\n        return this.axios.patch(url, data)\n    }\n\n    delete(url) {\n        return this.axios.delete(url)\n    }\n\n}\n\nexport default new NetAxios('http://120.79.189.25:32088/');\n","import NetAxios from '../net/api'\n\nexport class ApiServers {\n    static vote(msgParams, result) {\n        return NetAxios.post('vote/vote', {\n            msgParams,\n            result\n        });\n    }\n\n    static product(address) {\n        return NetAxios.post('vote/product', {\n            address,\n        });\n    }\n}\n","import React, {useContext, useEffect, useMemo, useState} from \"react\"\nimport styled, { css } from \"styled-components\";\nimport {SignFn} from \"../../utils/sign\";\nimport {TypedMessage} from \"eth-sig-util\";\nimport {ApiServers} from \"../../utils/api_servers\";\nimport {Product} from \"./hook/product\";\n\n\nexport const Sign: React.FC = () => {\n\n\n    const sign = SignFn();\n    const [result, setResult] = useState<{data:TypedMessage<any>,result}>({\n        data: undefined, result: undefined\n    });\n\n    const [product] = Product();\n\n\n\n\n    return (<StyleButton>\n\n        <div className={\"list\"}>\n            <p>项目ID</p>\n            <p>项目介绍:</p>\n            <p>获取总投票</p>\n            <p> </p>\n        </div>\n        {\n            product.list.length > 0?<>\n                {\n                    product.list.map((ev)=>{\n                        return <div key={ev.product_id} className={`list ${product.ac.product_id === ev.product_id ?'ac':''}`} onClick={() => {\n                            let data = msgParams(ev.product_id);\n                            sign((ev) => {\n                                setResult({\n                                    result:ev,\n                                    data:data\n                                });\n                            }, data)\n                        }}>\n                            <p>{ev.product_id}</p>\n                            <p>{ev.msg}</p>\n                            <p>{ev.quantity}</p>\n                            <p>{product.ac.product_id === ev.product_id ? `已投 ${product.ac.quantity}票`:'为此项目签名'}</p>\n                        </div>\n\n                    })\n                }\n            </>:<div>无数据</div>\n        }\n\n\n\n        <div style={{\n            \"height\": \"100px\"\n        }}>---</div>\n        <div onClick={\n            async () => {\n                try {\n                    let bb = await ApiServers.vote(result.data,result.result);\n\n                }catch (e) {\n                    alert(e.err)\n                }\n            }\n        }>\n            投票\n        </div>\n    </StyleButton>);\n};\n\n\nconst mxmin = (ev:string) => css`\n\ncolor: ${ev};\n`\n\nconst StyleButton = styled.div`\n    height: 100vh;\n    width: 600px;\n    margin: 0 auto;\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n    flex-flow: column;\n    ${mxmin('red')}\n\n.list{\ndisplay: flex;\nalign-items: center;\nwidth: 100%;\np{\nflex: 1;\n}\n}\n.ac{\np{\ncolor: green;\n}\n}\n`;\n\n\n\n\n\nfunction msgParams(product:string):TypedMessage<any> {\n    return  {\n        domain: {\n            chainId: 1,\n            name: 'nsuer',\n            verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n            version: '4'\n        },\n\n        message: {\n            contents: 'vote',\n            product:product\n        },\n        primaryType: 'Mail',\n        types: {\n            EIP712Domain: [\n                {name: 'name', type: 'string'},\n                {name: 'version', type: 'string'},\n            ],\n            Mail: [\n                {name: 'contents', type: 'string'},\n                {name: 'product', type: 'string'}\n            ],\n            // Person: [{name: 'name', type: 'string'}, {name: 'wallets', type: 'address[]'}]\n        }\n    }\n}\n\n\n\n\n","import React, {useCallback, useContext} from \"react\";\nimport {useWallet} from \"use-wallet\";\nimport {Web3Conten} from \"../provider/web3/web3_provider\";\nimport {TypedMessage, recoverTypedSignature_v4} from \"eth-sig-util\";\n\nexport const SignFn = ():(callBack: (recovered: string) => void, msgParams: TypedMessage<any>,)=> void  => {\n    const {web3} = useContext(Web3Conten);\n    const {account} = useWallet();\n    const sign = useCallback((callBack: (recovered: string) => void, msgParams: TypedMessage<any>) => {\n\n        const from = account;\n        const params = [from, JSON.stringify(msgParams)];\n        const method = 'eth_signTypedData_v4';\n\n        // @ts-ignore\n        web3.currentProvider.sendAsync({\n            method,\n            params,\n            from,\n        }, (err, result) =>{\n            console.log(err);\n            if (err) return console.dir(err);\n            if (result.error) {\n                alert(result.error.message)\n            }\n            if (result.error) throw 'ERROR';\n            // const recovered = recoverTypedSignature_v4({\n            //     data: msgParams,\n            //     sig: result.result\n            // });\n            callBack(result.result);\n\n\n            // if (toChecksumAddress(recovered) === toChecksumAddress(from)) {\n            //     alert('Successfully recovered signer as ' + from)\n            // } else {\n            //     alert('Failed to verify signer when comparing ' + result + ' to ' + from)\n            // }\n\n        })\n    }, [web3, account]);\n\n    return sign;\n};\n","import {useCallback, useEffect, useState} from \"react\";\nimport {ApiServers} from \"../../../utils/api_servers\";\nimport {useWallet} from \"use-wallet\";\n\ninterface listCell {\n    product_id?: string, msg?: string, quantity?: string\n}\nexport const Product = () => {\n    const [product, setProduct] = useState<{list:listCell[],ac:listCell}>({list:[],ac:{}});\n    const {account} = useWallet();\n    const getProduct = useCallback(async () => {\n        try{\n            let data:any = await ApiServers.product(account);\n            setProduct(data);\n        }catch (e) {\n            setProduct(e);\n        }\n\n    }, [setProduct,account]);\n    useEffect(() => {\n        getProduct();\n    }, []);\n\n    return [product];\n\n};\n","import './App.css';\nimport styled from 'styled-components'\nimport React, {useEffect} from 'react'\nimport {useWallet, UseWalletProvider} from 'use-wallet'\nimport {Sign} from \"./view/signature/sign\";\nimport {Web3Provider} from \"./provider/web3/web3_provider\";\n\nexport const App: React.FC = () => {\n\n    return (<UseWalletProvider\n        chainId={1}\n        connectors={{walletconnect: {rpcUrl: 'https://mainnet.infura.io/v3/a17d484065334e38bd8b6475ca266c88'},}}\n\n    >\n        <Web3Provider>\n            <Provider>\n\n            </Provider>\n        </Web3Provider>\n    </UseWalletProvider>);\n};\n\n\nconst Provider: React.FC = () => {\n    const {account, connect} = useWallet();\n    useEffect(() => {\n        console.log(account);\n    });\n    return (<StyleBox>\n        {account ? <Sign/> : <p onClick={async () => {\n            var bb = await connect('injected');\n        }\n        }>需要授权</p>}\n    </StyleBox>);\n};\n\n\nconst StyleBox = styled.div``;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}